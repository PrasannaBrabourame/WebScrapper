import scrapy
from sqlalchemy import Table, MetaData, create_engine

class BlogSpider(scrapy.Spider):
    name = 'blogspider'
    start_urls = ['http://rammb.cira.colostate.edu/products/tc_realtime/index.asp']
    db = create_engine('postgresql+psycopg2://postgres:integra@localhost:5432/postgres')
    print(db)
    with db.connect() as conn:
        db.execute("CREATE SCHEMA IF NOT EXISTS weather AUTHORIZATION postgres")
        conn.execute("SET search_path TO test_schema, weather")
        meta = MetaData()
        referring = Table('referring', meta)
        db.execute("CREATE TABLE IF NOT EXISTS weather.Tropical(Id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, Name character(100) NOT NULL)")
        db.execute("CREATE TABLE IF NOT EXISTS weather.TropicalCyclones(Id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,TopicalId integer NOT NULL,CycloneName character(150) NOT NULL,UpdatedDate timestamp with time zone DEFAULT CURRENT_TIMESTAMP)")
    def parse(self, response):
        try:
            currentCyclone = []
            for title in response.css('.basin_storms'):
                result_set = self.db.execute("(select * from Weather.Tropical where Name = '"+str(title.css('h3 ::text').extract_first()).strip()+"')")
                currentCyclone.append({'title': str(title.css('h3 ::text').extract_first()).strip(),'value':str(title.css('ul>li>a ::text').extract_first()).strip()})
                count = 0
                for value in result_set:
                    count = count + 1
                if count == 0:
                    self.db.execute("INSERT INTO Weather.Tropical(Name) values ('"+str(title.css('h3 ::text').extract_first()).strip()+"')") 
                selection = self.db.execute("(select id,name from Weather.Tropical where Name = '"+str(title.css('h3 ::text').extract_first()).strip()+"')")
                for r in selection:
                    topicID = (str(r).replace('\'','').replace('(','').replace(')','').split(','))
                    curID = topicID[0]
                    curValu = topicID[1]
                    for value in currentCyclone:
                        if curValu.strip() == value['title']:
                            self.db.execute("INSERT INTO weather.tropicalcyclones(topicalid, cyclonename)VALUES ("+curID+", '"+value['value']+"')")
        except:
            print("Failed")
               